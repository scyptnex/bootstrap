#! /usr/bin/env bash

#-------------------------------------------------------------------------#
#                                  crypt                                  #
#                                                                         #
# Author: Nic H.                                                          #
# Date: 2016-Jan-29                                                       #
#                                                                         #
# Encrypt and decrypt files using openssl.  This utility tries to work    #
# out if it is encrypting or decrypting from the name of the input file.  #
#                                                                         #
# Usage:                                                                  #
#     crypt [OPTIONS] <file>                                              #
#                                                                         #
# Options:                                                                #
#     -c <cipher> Use <cipher> as the cipher (defaults: aes-256-cbc)      #
#     -d          Force decryption mode                                   #
#     -e          Force encryption mode                                   #
#     -f          Overwrite existing files                                #
#     -h          Display this help message                               #
#     -l          List available encryption mechanisms                    #
#     -o          Set output file                                         #
#     -m          Use modify mode, open the file in a text editor, and    #
#                 encrypt it again once completed (decryption mode only)  #
#-------------------------------------------------------------------------#

set -u
set -e

# prints the header text as a help message
function usage(){
    grep "^#.*#$" $0
}

# Automatically determine the default cipher from the help text
CIPHER=`usage | grep "\-c.*cipher.*defaults:" | sed -e 's/.*defaults: //' -e 's/).*//'`

# process command line arguments
MODE=""
FORCE=false
OUTPUT=""
MODIFY=false
while getopts "c:defhlo:m" opt; do
    case $opt in
        c)
            CIPHER="$OPTARG"
            ;;
        d)
            MODE="decrypt"
            ;;
        e)
            MODE="encrypt"
            ;;
        f)
            FORCE=true
            ;;
        h)
            usage
            exit 0
            ;;
        l)
            openssl enc -h 2>&1 | tr '\n' ' ' | sed -e 's/[ \t][ \t]*/ /g' -e 's/.*Cipher Types //' | tr ' ' '\n' | sed -e 's/^-//' | column
            exit 0
            ;;
        o)
            OUTPUT="$OPTARG"
            ;;
        m)
            MODIFY=true
            ;;
        \?)
            exit 1
            ;;
    esac
done
shift $(($OPTIND -1))

# ensure there is an arg1 and it is a file
if [ $# != 1 ] || [ ! -f $1 ] ; then
    echo "Cannot find file for encryption/decryption: $@" >&2
    exit 1
fi
INPUT=$1

# determine the mode (if unspecified) and the output file
OUT="$INPUT.$CIPHER.enc"
OPENSSL_MODE=""
MODE_NAME="encrypting"
if [ "$MODE" != "encrypt" ] && ([ "$MODE" == "decrypt" ] || [[ $INPUT =~ .*$CIPHER\.enc$ ]]) ; then
    OUT=${INPUT%\.${CIPHER}.enc}
    OPENSSL_MODE="-d"
    MODE_NAME="decrypting"
fi
if [ "$OUTPUT" != "" ]; then
    OUT="$OUTPUT"
fi

# early exit if the output file already exists (and not in force mode)
if [ -f $OUT ] && [ $FORCE != "true" ] ; then
    echo "Output file already exists: $OUT" >&2
    exit 1;
fi

# perform the actual encryption
echo "$MODE_NAME: $1 -> $OUT"
openssl enc -$CIPHER $OPENSSL_MODE -a -in $INPUT -out $OUT

# in modify mode, open a text editor and change the file
if [ "$MODE_NAME" == "decrypting" ] && [ $MODIFY == "true" ]; then
    vim $OUT
    TMP_RESWAP=`mktemp`
    echo "re-encrypting: $OUT -> $TMP_RESWAP -> $INPUT"
    openssl enc -$CIPHER -a -in $OUT -out $TMP_RESWAP
    rm $OUT
    mv $TMP_RESWAP $INPUT
fi

