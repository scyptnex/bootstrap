#! /usr/bin/env bash

#-------------------------------------------------------------------------#
#                                 gpgedit                                 #
#                                                                         #
# Author: Nic H.                                                          #
# Date: 2015-Jun-23                                                       #
#                                                                         #
# Edit gpg-encrypted files.  If the file exists it will be decrypted for  #
# you, if it does not exist a new file will be made. Once the editing     #
# session completes, the file is encrypted and written to disk.           #
#                                                                         #
# Usage: gpgedit [editor] <file> [user]                                   #
#        Edit <file> with [editor, default vim], using encryption key     #
#        [user, default `whoami`]                                         #
#-------------------------------------------------------------------------#

function usage(){
    grep "^#.*#$" $0
}

EDITOR="vim"
FILE=""
USER=`whoami`

if [ $# == 1 ]; then
    FILE=$1
elif [ $# == 2 ]; then
    which $1 2>&1 >/dev/null
    if [ $? == 0 ]; then
        EDITOR=$1
        FILE=$2
    else
        FILE=$1
        USER=$2
    fi
elif [ $# == 3 ]; then
    EDITOR=$1
    FILE=$2
    USER=$3
else
    usage
    exit 1
fi

if [ "X`gpg --list-keys | grep ^uid | grep $USER`" == "X" ]; then
    echo "Cannot find key for user $USER"
    echo "Available keys are:"
    gpg --list-keys
    exit
fi

TMP_FIL=`tempfile -d $(dirname $FILE)`
if [ -e $FILE ] && [ -f $FILE ]; then
    mv $FILE $TMP_FIL
    gpg -dr $USER $TMP_FIL > $FILE
fi
$EDITOR $FILE
if [ $? == 0 ]; then
    #Successful edit, save
    mv $FILE $TMP_FIL
    gpg -er $USER -o $FILE $TMP_FIL
    rm $TMP_FIL
else
    #unsuccessful edit, revert the old version
    mv $TMP_FIL $FILE
fi

