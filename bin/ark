#! /usr/bin/env bash

#=========================================================================#
#                                   ark                                   #
#                                                                         #
# Author: nic                                                             #
# Date: 2017-Jun-19                                                       #
#                                                                         #
# The archiving utility. Compresses folders into a checksummed archive,   #
# or uncompresses and checks archives into a folder. By default, the zip  #
# format is used (for portability reasons).                               #
#                                                                         #
# Usage:                                                                  #
#   ark [Options] <archive/directory>                                     #
#                                                                         #
# Options:                                                                #
#   -d <server>  deploy the archive via scp to <server>                   #
#   -f           fast mode, do not create or verify checksums             #
#   -g           Use .tgz format                                          #
#   -h           print this help message                                  #
#   -j           Use .tar.bz2 format                                      #
#   -l           just list contents, do not uncompress                    #
#   -n <name>    Override the default name with <name>                    #
#   -z           Use .zip format                                          #
#=========================================================================#

set -e
set -u

function usage(){
    grep "^#.*#$" $0
}

function errxit(){
    [ $# -gt 0 ] && echo "Error: $@" >&2
    echo "Re-run with -h for help" >&2
    exit 1
}

FORMAT=""
ARCHIVING="false"
NAME=""
while getopts "d:fghjln:z" opt; do
    case $opt in
        d)
            errxit deploy not implemented
            ;;
        f)
            errxit fast not implemented
            ;;
        g)
            FORMAT="gz"
            ;;
        h)
            usage
            exit 0
            ;;
        j)
            FORMAT="bz"
            ;;
        l)
            errxit list not implemented
            ;;
        n)
            NAME="$OPTARG"
            ;;
        z)
            FORMAT="zip"
            ;;
        \?)
            errxit Unrecognised command
            ;;
    esac
done
shift $(($OPTIND -1))

#========================#
# work out the format/op #
#========================#
if [ $# != 1 ]; then
    errxit please specify one archive/directory
elif [ -d "$1" ]; then
    ARCHIVING="true"
    [ -z "$FORMAT" ] && FORMAT="zip"
elif [ ! -f "$1" ]; then
    errxit "\"$1\" does not exist or is not a plain file"
elif [[ "$1" == *.zip ]]; then
    FORMAT="zip"
elif [[ "$1" == *.tar.gz ]] || [[ "$1" == *.tgz ]]; then
    FORMAT="gz"
elif [[ "$1" == *.tar.* ]]; then
    FORMAT="bz"
    [[ "$1" == *.tar.bz2 ]] || echo "Warning, tar archive \"$1\" treated as bz2"  >&2
fi
[ -z "$FORMAT" ] && errxit "Unknown archive format for \"$1\""

echo $FORMAT
echo $ARCHIVING
echo ${1%.tgz}

exit 0

    if [ -z "$NAME" ]; then
        NAME=`basename "$1"`
    fi
    case $FORMAT in
        zip)
            TFILE=`mktemp "${NAME}_XXX.zip"`
            RFILE="$NAME.zip"
            COMMAND="zip -vr"
            ;;
        gz)
            TFILE=`mktemp "${NAME}_XXX.tgz"`
            RFILE="$NAME.tgz"
            COMMAND="tar -czvf"
            ;;
        bz)
            TFILE=`mktemp "${NAME}_XXX.tar.bz2"`
            RFILE="$NAME.tar.bz2"
            COMMAND="tar -cjvf"
            ;;
    esac
    rm "$TFILE"
    pushd "$1"
    rm -f ./CHECKSUM
    checksummarize . > /dev/null
    popd
    $COMMAND "$TFILE" "$1"
    if [ ! -e "$RFILE" ]; then
        mv "$TFILE" "$RFILE"
    fi
    rm "$1/CHECKSUM"
elif [ -f "$1" ]; then
    if [[ "$1" == *.zip ]]; then
        COMMAND="unzip"
    elif [[ "$1" == *.tar.* ]] || [[ "$1" == *.tgz ]]; then
        COMMAND="tar -xvf"
    else
        errxit "Unknown archive format for \"$1\""
    fi
    $COMMAND "$1"
else
    errxit "File \"$1\" does not exist"
fi
