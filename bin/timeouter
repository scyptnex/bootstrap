#! /usr/bin/env bash

#-------------------------------------------------------------------------#
#                                timeouter                                #
#                                                                         #
# Author: Nic H.                                                          #
# Date: 2015-Jun-11                                                       #
#                                                                         #
# Usage: timeouter [-h] [-v] [-t <time>] [-p <period>] <process>          #
#                                                                         #
# Kill processes named <process> after <time> seconds, checking if the    #
# have timed-out every <period> seconds. -h displays help, -v is verbose  #
#-------------------------------------------------------------------------#

function usage(){
    grep "^#.*#$" $0
}

TIMEOUT=600 # 10 minutes
PERIOD=5
MID=","

while getopts "ht:p:v" opt; do
    case $opt in
        h)
            usage
            exit 0
            ;;
        t)
            TIMEOUT=$OPTARG
            if [[ ! $TIMEOUT =~ ^[0-9]+$ ]]; then
                echo "-t must have a time in (whole) seconds" >&2
                exit 1
            fi
            ;;
        p)
            PERIOD=$OPTARG
            if [[ ! $PERIOD =~ ^[0-9]+$ ]]; then
                echo "-p must have a time in (whole) seconds" >&2
                exit 1
            fi
            ;;
        v)
            VERBOSE="true"
            ;;
        \?)
            usage >&2
            exit 1
            ;;
    esac
done
shift $(($OPTIND -1))

if [ $# != 1 ]; then
    echo "Must provide a process-name to kill" >&2
    exit 1
fi

declare -A WATCHDOG
while [ 1 == 1 ]; do
    # Write this period's times into current
    declare -A CURRENT
    for PS in `ps -eo "%p${MID}%c" | grep "${MID}$1$" | sed "s/$MID.*$//"`; do
        CURRENT[$PS]=`date +%s`
    done
    # Remove anything not in the current period from the watchdog
    for K in ${!WATCHDOG[@]}; do
        if [ ! ${CURRENT[$K]+_} ]; then
            unset WATCHDOG[$K]
            [ -z "$VERBOSE" ] || date +"%T - $K completes"
        fi
    done
    # Add new things to watchdog, check old things
    for K in ${!CURRENT[@]}; do
        if [ ${WATCHDOG[$K]+_} ]; then
            if [ $((${CURRENT[$K]} - ${WATCHDOG[$K]})) -gt $TIMEOUT ]; then
                kill -9 $K
                [ -z "$VERBOSE" ] || date +"%T - $K KILLED"
            fi
        else
            WATCHDOG[$K]="${CURRENT[$K]}"
            [ -z "$VERBOSE" ] || date +"%T - $K is being tracked"
        fi
    done

    unset CURRENT
    sleep $PERIOD
done

