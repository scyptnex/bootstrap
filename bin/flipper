#! /usr/bin/env bash

#=========================================================================#
#                                 flipper                                 #
#                                                                         #
# Author: nic                                                             #
# Date: 2017-Mar-21                                                       #
#                                                                         #
# Creates a daemon that flips a directory from a protected GPG backend to #
# a plaintext frontend                                                    #
#=========================================================================#

set -e
set -u

function usage(){
    grep "^#.*#$" $0
}

function errxit() {
    echo "Error:" >&2
    echo " - $@" >&2
    echo " - Rerun with \"-h\" for help" >&2
    exit 1
}

META=".flipper"
CLEAN="false"
FLIP_DIR="/tmp/flipped"
RECIPIENT="$(whoami)"
while getopts "cd:hr:" opt; do
    case $opt in
        c)
            CLEAN="true"
            ;;
        d)
            FLIP_DIR="$OPTARG"
            ;;
        h)
            usage
            exit 0
            ;;
        r)
            RECIPIENT="$OPTARG"
            ;;
        \?)
            usage
            exit 1
            ;;
    esac
done
shift $(($OPTIND -1))

if [ -f "$FLIP_DIR/$META.path" ]; then
    BASE_DIR="$(cat $FLIP_DIR/$META.path)"
else
    [ $# -lt 1 ] && errxit "Please specify the flip directory"
    [ -d "$1" ]  || errxit "\"$1\" is not a directory"
    BASE_DIR="$(readlink -f $1)"
    echo "Initialising the flip directory with $BASE_DIR"
    mkdir -p "$FLIP_DIR"
    echo $BASE_DIR > "$FLIP_DIR/$META.path"
fi

[ -f "$BASE_DIR/$META"* ] && errxit "A file that will override flipper's meta file has been found in the base directory, aborting"
gpg --list-secret-keys "$RECIPIENT" >/dev/null 2>/dev/null || errxit "Unable to find suitable private key for \"$RECIPIENT\""
gpg --list-keys "$RECIPIENT" >/dev/null 2>/dev/null || errxit "Unable to find suitable public key for \"$RECIPIENT\""

echo $BASE_DIR "->" $FLIP_DIR " : " $RECIPIENT

touch "$FLIP_DIR/$META.cur" # create an empty current state if there isnt one
find "$FLIP_DIR" -type f | xargs stat -c "%Y %n" | grep -v "\.flipper" > $FLIP_DIR/$META.flip || echo
find "$BASE_DIR" -type f | xargs stat -c "%Y %n" | grep -E "\.(gpg|asc)$" > $FLIP_DIR/$META.base || echo

python3 TMP.py "$FLIP_DIR" "$BASE_DIR" "$FLIP_DIR/$META.flip" "$FLIP_DIR/$META.cur" "$FLIP_DIR/$META.base"

echo done
rm $FLIP_DIR/$META.flip $FLIP_DIR/$META.base
find "$FLIP_DIR" -type f | xargs stat -c "%Y %n" | grep -v "\.flipper" > $FLIP_DIR/$META.cur || echo

if [ $CLEAN == "true" ]; then
    echo "Cleaning $FLIP_DIR"
    rm -rf $FLIP_DIR
fi

