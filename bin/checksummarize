#! /usr/bin/env bash

#=========================================================================#
#                             checksummarize                              #
#                                                                         #
# Author: nic                                                             #
# Date: 2017-Feb-16                                                       #
#                                                                         #
# Generate a script that will perform checksums for the files recursively #
# below this directory.                                                   #
#                                                                         #
# Usage                                                                   #
#     checksummarize [path]                                               #
#=========================================================================#

set -e
set -u

function usage(){
    grep "^#.*#$" $0
}

function errxit(){
    [ $# -gt 0 ] && echo "Error: $1"
    echo "Re-run with -h for help" >&2
    exit 1
}

while getopts "h" opt; do
    case $opt in
        h)
            usage
            exit 0
            ;;
        \?)
            errxit
            ;;
    esac
done
shift $(($OPTIND -1))

DIR="."
[ $# -gt 0 ] && DIR="$1"

[ -d "$DIR" ] || errxit "Cannot create checksums for a non-directory \"$DIR\""
[ -f "$DIR/CHECKSUM" ] && errxit "A checksum file already exists at \"$DIR/CHECKSUM\""

trap "popd > /dev/null" EXIT
pushd "$DIR" > /dev/null

echo "#! /usr/bin/env bash" > CHECKSUM
echo "function all_sums() {" >> CHECKSUM
echo "cat << SHA_256_SUM_EOF" >> CHECKSUM
find . -type f | grep -v "^\./CHECKSUM$" | sort | xargs -d"\n" sha256sum | sed -e 's/\([$@#]\)/\\\1/g' | tee -a CHECKSUM
echo "SHA_256_SUM_EOF" >> CHECKSUM
echo "}" >> CHECKSUM
cat << SCRIPT_END >> CHECKSUM
trap "popd > /dev/null" EXIT
pushd \$(dirname \$0) > /dev/null
if command -v pv >/dev/null 2>&1; then
    all_sums | sha256sum -c | pv -ls \$(all_sums | wc -l) | grep -v "OK$"
    EXIT_C=\$?
else
    echo "If you would like to see a progress bar, install pv"
    all_sums | sha256sum -c | grep -v "OK$"
    EXIT_C=\$?
fi
if [ "\$EXIT_C" == "0" ]; then
    exit 1
else
    echo "Success"
fi
SCRIPT_END
chmod a+x CHECKSUM

